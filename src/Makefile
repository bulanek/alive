#############################################################################
# Makefile for building: alive
# Generated by qmake (2.01a) (Qt 4.8.5) on: Fri Feb 14 16:16:23 2014
# Project:  alive.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -o Makefile alive.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_SQL_LIB -DQT_XML_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -march=i686 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -march=i686 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtXml -I/usr/include/qt4/QtSql -I/usr/include/qt4 -IC:\Program\ Files\boost\boost_1_50 -IC:\gsl-1.8\include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1,--sort-common,--as-needed,-z,relro -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -lgsl -lgslcblas -lQtSql -lQtXml -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = datahandle.cpp \
		main.cpp \
		mainwindow.cpp \
		qcustomplot.cpp \
		sqlconnection.cpp \
		plateau.cpp \
		calibration.cpp \
		sqlhandle.cpp \
		BinReader.cc \
		info.cpp \
		data.cpp \
		doseresults.cpp \
		tools.cpp \
		dbsave.cpp \
		mythread.cpp moc_mainwindow.cpp \
		moc_qcustomplot.cpp \
		moc_sqlconnection.cpp \
		moc_plateau.cpp \
		moc_calibration.cpp \
		moc_info.cpp \
		moc_doseresults.cpp \
		moc_dbsave.cpp \
		moc_mythread.cpp
OBJECTS       = datahandle.o \
		main.o \
		mainwindow.o \
		qcustomplot.o \
		sqlconnection.o \
		plateau.o \
		calibration.o \
		sqlhandle.o \
		BinReader.o \
		info.o \
		data.o \
		doseresults.o \
		tools.o \
		dbsave.o \
		mythread.o \
		moc_mainwindow.o \
		moc_qcustomplot.o \
		moc_sqlconnection.o \
		moc_plateau.o \
		moc_calibration.o \
		moc_info.o \
		moc_doseresults.o \
		moc_dbsave.o \
		moc_mythread.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		alive.pro
QMAKE_TARGET  = alive
DESTDIR       = 
TARGET        = alive

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_sqlconnection.h ui_plateau.h ui_calibration.h ui_info.h ui_doseresults.h ui_dbsave.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: alive.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQtSql.prl \
		/usr/lib/libQtXml.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile alive.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQtSql.prl:
/usr/lib/libQtXml.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile alive.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/alive1.0.0 || $(MKDIR) .tmp/alive1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/alive1.0.0/ && $(COPY_FILE) --parents datahandle.h mainwindow.h qcustomplot.h sqlconnection.h plateau.h calibration.h sqlhandle.h BinReader.hh info.h data.h doseresults.h tools.h dbsave.h mythread.h .tmp/alive1.0.0/ && $(COPY_FILE) --parents datahandle.cpp main.cpp mainwindow.cpp qcustomplot.cpp sqlconnection.cpp plateau.cpp calibration.cpp sqlhandle.cpp BinReader.cc info.cpp data.cpp doseresults.cpp tools.cpp dbsave.cpp mythread.cpp .tmp/alive1.0.0/ && $(COPY_FILE) --parents mainwindow.ui sqlconnection.ui plateau.ui calibration.ui info.ui doseresults.ui dbsave.ui .tmp/alive1.0.0/ && (cd `dirname .tmp/alive1.0.0` && $(TAR) alive1.0.0.tar alive1.0.0 && $(COMPRESS) alive1.0.0.tar) && $(MOVE) `dirname .tmp/alive1.0.0`/alive1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/alive1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_qcustomplot.cpp moc_sqlconnection.cpp moc_plateau.cpp moc_calibration.cpp moc_info.cpp moc_doseresults.cpp moc_dbsave.cpp moc_mythread.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_qcustomplot.cpp moc_sqlconnection.cpp moc_plateau.cpp moc_calibration.cpp moc_info.cpp moc_doseresults.cpp moc_dbsave.cpp moc_mythread.cpp
moc_mainwindow.cpp: datahandle.h \
		tools.h \
		BinReader.hh \
		data.h \
		qcustomplot.h \
		mainwindow.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_qcustomplot.cpp: qcustomplot.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) qcustomplot.h -o moc_qcustomplot.cpp

moc_sqlconnection.cpp: ui_sqlconnection.h \
		datahandle.h \
		tools.h \
		BinReader.hh \
		data.h \
		sqlhandle.h \
		sqlconnection.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) sqlconnection.h -o moc_sqlconnection.cpp

moc_plateau.cpp: datahandle.h \
		tools.h \
		BinReader.hh \
		data.h \
		plateau.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) plateau.h -o moc_plateau.cpp

moc_calibration.cpp: qcustomplot.h \
		datahandle.h \
		tools.h \
		BinReader.hh \
		data.h \
		calibration.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) calibration.h -o moc_calibration.cpp

moc_info.cpp: datahandle.h \
		tools.h \
		BinReader.hh \
		data.h \
		info.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) info.h -o moc_info.cpp

moc_doseresults.cpp: datahandle.h \
		tools.h \
		BinReader.hh \
		data.h \
		doseresults.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) doseresults.h -o moc_doseresults.cpp

moc_dbsave.cpp: sqlhandle.h \
		datahandle.h \
		tools.h \
		BinReader.hh \
		data.h \
		mythread.h \
		dbsave.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) dbsave.h -o moc_dbsave.cpp

moc_mythread.cpp: sqlhandle.h \
		datahandle.h \
		tools.h \
		BinReader.hh \
		data.h \
		mythread.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) mythread.h -o moc_mythread.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_sqlconnection.h ui_plateau.h ui_calibration.h ui_info.h ui_doseresults.h ui_dbsave.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_sqlconnection.h ui_plateau.h ui_calibration.h ui_info.h ui_doseresults.h ui_dbsave.h
ui_mainwindow.h: mainwindow.ui \
		qcustomplot.h
	/usr/lib/qt4/bin/uic mainwindow.ui -o ui_mainwindow.h

ui_sqlconnection.h: sqlconnection.ui
	/usr/lib/qt4/bin/uic sqlconnection.ui -o ui_sqlconnection.h

ui_plateau.h: plateau.ui \
		qcustomplot.h
	/usr/lib/qt4/bin/uic plateau.ui -o ui_plateau.h

ui_calibration.h: calibration.ui \
		qcustomplot.h
	/usr/lib/qt4/bin/uic calibration.ui -o ui_calibration.h

ui_info.h: info.ui
	/usr/lib/qt4/bin/uic info.ui -o ui_info.h

ui_doseresults.h: doseresults.ui
	/usr/lib/qt4/bin/uic doseresults.ui -o ui_doseresults.h

ui_dbsave.h: dbsave.ui
	/usr/lib/qt4/bin/uic dbsave.ui -o ui_dbsave.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

datahandle.o: datahandle.cpp datahandle.h \
		tools.h \
		BinReader.hh \
		data.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o datahandle.o datahandle.cpp

main.o: main.cpp mainwindow.h \
		datahandle.h \
		tools.h \
		BinReader.hh \
		data.h \
		qcustomplot.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp sqlconnection.h \
		ui_sqlconnection.h \
		datahandle.h \
		tools.h \
		BinReader.hh \
		data.h \
		sqlhandle.h \
		mainwindow.h \
		qcustomplot.h \
		ui_mainwindow.h \
		plateau.h \
		ui_plateau.h \
		calibration.h \
		ui_calibration.h \
		dbsave.h \
		mythread.h \
		info.h \
		ui_info.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

qcustomplot.o: qcustomplot.cpp qcustomplot.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qcustomplot.o qcustomplot.cpp

sqlconnection.o: sqlconnection.cpp sqlconnection.h \
		ui_sqlconnection.h \
		datahandle.h \
		tools.h \
		BinReader.hh \
		data.h \
		sqlhandle.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sqlconnection.o sqlconnection.cpp

plateau.o: plateau.cpp plateau.h \
		datahandle.h \
		tools.h \
		BinReader.hh \
		data.h \
		ui_plateau.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o plateau.o plateau.cpp

calibration.o: calibration.cpp calibration.h \
		qcustomplot.h \
		datahandle.h \
		tools.h \
		BinReader.hh \
		data.h \
		ui_calibration.h \
		doseresults.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o calibration.o calibration.cpp

sqlhandle.o: sqlhandle.cpp sqlhandle.h \
		datahandle.h \
		tools.h \
		BinReader.hh \
		data.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sqlhandle.o sqlhandle.cpp

BinReader.o: BinReader.cc BinReader.hh \
		data.h \
		tools.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BinReader.o BinReader.cc

info.o: info.cpp info.h \
		datahandle.h \
		tools.h \
		BinReader.hh \
		data.h \
		ui_info.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o info.o info.cpp

data.o: data.cpp data.h \
		tools.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o data.o data.cpp

doseresults.o: doseresults.cpp doseresults.h \
		datahandle.h \
		tools.h \
		BinReader.hh \
		data.h \
		ui_doseresults.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o doseresults.o doseresults.cpp

tools.o: tools.cpp tools.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tools.o tools.cpp

dbsave.o: dbsave.cpp dbsave.h \
		sqlhandle.h \
		datahandle.h \
		tools.h \
		BinReader.hh \
		data.h \
		mythread.h \
		ui_dbsave.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o dbsave.o dbsave.cpp

mythread.o: mythread.cpp mythread.h \
		sqlhandle.h \
		datahandle.h \
		tools.h \
		BinReader.hh \
		data.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mythread.o mythread.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_qcustomplot.o: moc_qcustomplot.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_qcustomplot.o moc_qcustomplot.cpp

moc_sqlconnection.o: moc_sqlconnection.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_sqlconnection.o moc_sqlconnection.cpp

moc_plateau.o: moc_plateau.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_plateau.o moc_plateau.cpp

moc_calibration.o: moc_calibration.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_calibration.o moc_calibration.cpp

moc_info.o: moc_info.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_info.o moc_info.cpp

moc_doseresults.o: moc_doseresults.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_doseresults.o moc_doseresults.cpp

moc_dbsave.o: moc_dbsave.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_dbsave.o moc_dbsave.cpp

moc_mythread.o: moc_mythread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mythread.o moc_mythread.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

